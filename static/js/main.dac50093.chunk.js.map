{"version":3,"sources":["components/ProductList.jsx","components/ShoppingCart.jsx","components/Chatbot.jsx","App.jsx","index.js"],"names":["sliderImages","process","ProductList","_ref","onAddToCart","current","setCurrent","useState","products","setProducts","loading","setLoading","useEffect","fetch","then","res","json","data","interval","setInterval","prev","length","clearInterval","_jsx","children","product","_jsxs","style","display","flexDirection","alignItems","margin","position","width","height","overflow","borderRadius","boxShadow","marginBottom","src","alt","title","objectFit","transition","bottom","left","background","color","padding","textAlign","fontWeight","fontSize","borderBottomLeftRadius","borderBottomRightRadius","onClick","border","cursor","ShoppingCart","cart","ordered","onQuantityChange","onRemove","onOrderNow","onCancel","total","reduce","sum","item","price","quantity","className","_Fragment","map","name","id","disabled","marginRight","type","min","value","onChange","e","Number","target","marginLeft","handleOrderNowClick","message","forEach","concat","whatsappUrl","window","open","Chatbot","Component","constructor","arguments","state","messages","input","handleInputChange","event","this","setState","handleSendMessage","trim","content","sender","handleBotResponse","async","userMessage","_data$","response","method","headers","body","JSON","stringify","inputs","botMessage","Array","isArray","generated_text","render","borderTopLeftRadius","borderTopRightRadius","overflowY","msg","index","maxWidth","wordBreak","placeholder","onKeyDown","key","App","setCart","setOrdered","showChatbot","setShowChatbot","right","zIndex","top","prevCart","find","_objectSpread","handleQuantityChange","Math","max","filter","handleOrderNow","handleCancel","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dac50093.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst sliderImages = [\r\n  process.env.PUBLIC_URL + '/images/1000278926.jpg',\r\n  process.env.PUBLIC_URL + '/images/1000278927.jpg',\r\n  process.env.PUBLIC_URL + '/images/1000278928.jpg',\r\n  process.env.PUBLIC_URL + '/images/1000278929.jpg',\r\n];\r\n\r\nconst ProductList = ({ onAddToCart }) => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch('products.json')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setProducts(data);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrent(prev => (prev + 1) % sliderImages.length);\r\n    }, 2500);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  if (loading) return <p>Loading products...</p>;\r\n\r\n  const product = products[current] || {};\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', margin: '2rem 0' }}>\r\n      <div style={{ position: 'relative', width: 320, height: 320, overflow: 'hidden', borderRadius: 18, boxShadow: '0 4px 24px rgba(0,0,0,0.08)', marginBottom: 24 }}>\r\n        <img\r\n          src={sliderImages[current]}\r\n          alt={product.title || 'Product'}\r\n          style={{ width: '100%', height: '100%', objectFit: 'cover', borderRadius: 18, transition: 'all 0.5s' }}\r\n        />\r\n        <div style={{ position: 'absolute', bottom: 0, left: 0, width: '100%', background: 'rgba(0,0,0,0.5)', color: '#fff', padding: '12px 0', textAlign: 'center', fontWeight: 700, fontSize: 20, borderBottomLeftRadius: 18, borderBottomRightRadius: 18 }}>\r\n          {product.title}\r\n        </div>\r\n      </div>\r\n      <button onClick={() => onAddToCart(product)} style={{ background: 'linear-gradient(90deg, #007bff 60%, #00c6ff 100%)', color: '#fff', border: 'none', borderRadius: 24, padding: '12px 36px', fontSize: 18, fontWeight: 700, boxShadow: '0 2px 8px rgba(0,123,255,0.08)', cursor: 'pointer' }}>\r\n        Add to Cart\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;","import React from 'react';\r\n\r\nfunction ShoppingCart({ cart, ordered, onQuantityChange, onRemove, onOrderNow, onCancel }) {\r\n  const total = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);\r\n\r\n  // WhatsApp order message\r\n  const getWhatsAppMessage = () => {\r\n    if (cart.length === 0) return '';\r\n    let message = 'Order Details:%0A';\r\n    cart.forEach(item => {\r\n      message += `${item.name} x ${item.quantity} = $${item.price * item.quantity}%0A`;\r\n    });\r\n    message += `%0ATotal: $${total}`;\r\n    return message;\r\n  };\r\n\r\n  const handleOrderNowClick = () => {\r\n    if (cart.length === 0) return;\r\n    let message = '🛒 *Order Details*:%0A';\r\n    cart.forEach(item => {\r\n      message += `• ${item.name} x ${item.quantity} = ₹${item.price * item.quantity}%0A`;\r\n    });\r\n    message += `%0A*Total:* ₹${total}`;\r\n    const whatsappUrl = `https://wa.me/916381163597?text=${message}`;\r\n    window.open(whatsappUrl, '_blank', 'noopener,noreferrer');\r\n    onOrderNow();\r\n  };\r\n\r\n  return (\r\n    <div className=\"shopping-cart-container\">\r\n      <h2>Shopping Cart</h2>\r\n      {cart.length === 0 ? (\r\n        ordered ? <p>Order placed successfully!</p> : <p>Your cart is empty.</p>\r\n      ) : (\r\n        <>\r\n          <ul>\r\n            {cart.map(item => (\r\n              <li key={item.id}>\r\n                <span style={{ fontWeight: 600 }}>{item.name}</span>\r\n                <span>\r\n                  <button onClick={() => onQuantityChange(item.id, item.quantity - 1)} disabled={item.quantity <= 1} style={{ marginRight: 4 }}>-</button>\r\n                  <input type=\"number\" min=\"1\" value={item.quantity} onChange={e => onQuantityChange(item.id, Number(e.target.value))} />\r\n                  <button onClick={() => onQuantityChange(item.id, item.quantity + 1)} style={{ marginLeft: 4 }}>+</button>\r\n                </span>\r\n                <span style={{ color: '#007bff', fontWeight: 600 }}>\r\n                  ₹{item.price} x {item.quantity} = ₹{item.price * item.quantity}\r\n                </span>\r\n                <button onClick={() => onRemove(item.id)} style={{ marginLeft: 8, background: '#eee', color: 'red', border: 'none', borderRadius: 8, cursor: 'pointer', fontWeight: 700 }}>Remove</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <p><strong>Total:</strong> ₹{total}</p>\r\n          <button onClick={handleOrderNowClick} style={{ marginRight: 10, background: 'linear-gradient(90deg, #007bff 60%, #00c6ff 100%)' }}>Order Now (WhatsApp)</button>\r\n          <button onClick={onCancel} style={{ background: 'linear-gradient(90deg, #ff416c 60%, #ff4b2b 100%)' }}>Cancel</button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShoppingCart;\r\n","import React, { Component } from 'react';\nimport Message from './Message';\nimport '../styles/chatbot.css';\n\nclass Chatbot extends Component {\n  state = {\n    messages: [],\n    input: '',\n    loading: false\n  };\n\n  handleInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  handleSendMessage = () => {\n    const { input, messages } = this.state;\n    if (input.trim()) {\n      this.setState({\n        messages: [...messages, { content: input, sender: 'user' }],\n        input: '',\n        loading: true\n      }, this.handleBotResponse);\n    }\n  };\n\n  handleBotResponse = async () => {\n    const { messages } = this.state;\n    const userMessage = messages[messages.length - 1].content;\n    try {\n      const response = await fetch('https://api-inference.huggingface.co/models/google/flan-t5-base', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ inputs: userMessage })\n      });\n      const data = await response.json();\n      let botMessage = 'Sorry, I could not get an answer.';\n      if (Array.isArray(data) && data[0]?.generated_text) {\n        botMessage = data[0].generated_text;\n      } else if (data.generated_text) {\n        botMessage = data.generated_text;\n      }\n      this.setState({\n        messages: [...this.state.messages, { content: botMessage, sender: 'bot' }],\n        loading: false\n      });\n    } catch (e) {\n      this.setState({\n        messages: [...this.state.messages, { content: 'Error fetching answer.', sender: 'bot' }],\n        loading: false\n      });\n    }\n  };\n\n  render() {\n    const { messages, input, loading } = this.state;\n\n    return (\n      <div className=\"chatbot card shadow\" style={{ width: 370, borderRadius: 12, position: 'relative', background: '#f8f9fa', border: 'none' }}>\n        <div className=\"card-header bg-primary text-white text-center\" style={{ borderTopLeftRadius: 12, borderTopRightRadius: 12, fontWeight: 600, fontSize: 20 }}>\n          Chatbot\n        </div>\n        <div className=\"card-body p-3\" style={{ height: 340, overflowY: 'auto', background: '#fff' }}>\n          <div className=\"messages mb-2\">\n            {messages.map((msg, index) => (\n              <div key={index} className={`d-flex ${msg.sender === 'user' ? 'justify-content-end' : 'justify-content-start'}`}>\n                <span className={`badge ${msg.sender === 'user' ? 'bg-primary text-white' : 'bg-light text-dark'} mb-2`} style={{ fontSize: 15, padding: '10px 16px', borderRadius: 16, maxWidth: 220, wordBreak: 'break-word' }}>\n                  {msg.content}\n                </span>\n              </div>\n            ))}\n            {loading && (\n              <div className=\"d-flex justify-content-start\">\n                <span className=\"badge bg-light text-dark mb-2\" style={{ fontSize: 15, padding: '10px 16px', borderRadius: 16, maxWidth: 220, wordBreak: 'break-word' }}>\n                  Thinking...\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"card-footer bg-light p-2\" style={{ borderBottomLeftRadius: 12, borderBottomRightRadius: 12 }}>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={input}\n              onChange={this.handleInputChange}\n              placeholder=\"Type a message...\"\n              style={{ borderRadius: 8 }}\n              onKeyDown={e => { if (e.key === 'Enter') this.handleSendMessage(); }}\n            />\n            <button className=\"btn btn-primary ms-2\" onClick={this.handleSendMessage} style={{ borderRadius: 8 }} disabled={loading}>\n              Send\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Chatbot;","import React, { useState } from 'react';\nimport ProductList from './components/ProductList';\nimport ShoppingCart from './components/ShoppingCart';\nimport Chatbot from './components/Chatbot';\n\nconst App = () => {\n  const [cart, setCart] = useState([]);\n  const [ordered, setOrdered] = useState(false);\n  const [showChatbot, setShowChatbot] = useState(false);\n\n  const handleAddToCart = (product) => {\n    setCart(prevCart => {\n      const existing = prevCart.find(item => item.id === product.id);\n      if (existing) {\n        return prevCart.map(item =>\n          item.id === product.id ? { ...item, quantity: item.quantity + 1 } : item\n        );\n      } else {\n        return [...prevCart, { id: product.id, name: product.title, price: product.price, quantity: 1 }];\n      }\n    });\n  };\n\n  const handleQuantityChange = (id, quantity) => {\n    setCart(prevCart =>\n      prevCart.map(item =>\n        item.id === id ? { ...item, quantity: Math.max(1, quantity) } : item\n      )\n    );\n  };\n\n  const handleRemove = (id) => {\n    setCart(prevCart => prevCart.filter(item => item.id !== id));\n  };\n\n  const handleOrderNow = () => {\n    setOrdered(true);\n    setCart([]);\n  };\n\n  const handleCancel = () => {\n    setCart([]);\n    setOrdered(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Melvin Health Mix</h1>\n      <button onClick={() => setShowChatbot(true)} style={{ position: 'fixed', bottom: 30, right: 30, zIndex: 1000, background: '#007bff', color: '#fff', border: 'none', borderRadius: 50, padding: '12px 24px', fontSize: 18, cursor: 'pointer', boxShadow: '0 2px 8px rgba(0,0,0,0.15)' }}>\n        Help\n      </button>\n      {showChatbot && (\n        <div style={{ position: 'fixed', bottom: 80, right: 30, zIndex: 1001 }}>\n          <Chatbot />\n          <button onClick={() => setShowChatbot(false)} style={{ position: 'absolute', top: 0, right: 0, background: 'red', color: '#fff', border: 'none', borderRadius: '0 8px 0 8px', padding: '2px 8px', cursor: 'pointer' }}>X</button>\n        </div>\n      )}\n      <ProductList onAddToCart={handleAddToCart} />\n      <ShoppingCart\n        cart={cart}\n        ordered={ordered}\n        onQuantityChange={handleQuantityChange}\n        onRemove={handleRemove}\n        onOrderNow={handleOrderNow}\n        onCancel={handleCancel}\n      />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/chatbot.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}